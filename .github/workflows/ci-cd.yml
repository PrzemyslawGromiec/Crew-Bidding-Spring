name: Crew Bidding System CI/CD

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Check Java version
        run: java --version

      - name: Check Maven Java version
        run: mvn -version

      - name: Ensure correct Java version is used
        run: |
          export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which java))))
          echo "JAVA_HOME is set to $JAVA_HOME"

      - name: Run tests
        run: mvn clean test

  #Building Docker image
  build-docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v3

      - name: Build JAR for Docker
        run: mvn clean package -DskipTests

      - name: Verify JAR file exists
        run: ls -l target/

      - name: Build Docker image
        run: |
          if ! docker build -t my-spring-app:latest .; then
            echo "ðŸš¨ ERROR: Docker image build failed!"
            exit 1
          fi

#      - name: Build Docker image
#        run: docker build -t my-spring-app:latest .

      - name: Log in to Docker Hub
        if: success()
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image
        if: success()
        run: |
            docker tag my-spring-app:latest pgromiec/my-bidding-app:latest
            docker push pgromiec/my-bidding-app:latest

      - name: Deploy new Docker container
        run: |
          docker stop my-bidding-app || true
          docker rm my-bidding-app || true
          docker run -d --restart always -p 8080:8080 --name my-bidding-app pgromiec/my-bidding-app:latest